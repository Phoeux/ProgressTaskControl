# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  test_job:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python manage.py

  set_secrets_job:
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_email: ${{ secrets.GCP_EMAIL }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
        export_default_credentials: true

  deploy_job:
    needs: [test_job]
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: setting secrets
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_email: ${{ secrets.EMAIL }}
        service_account_key: ${{ secrets.EMAIL_PASSWORD }}
        export_default_credentials: true
    - name: testing google servive cloud server ssh connection
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_SERVER_HOST }}
        username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          cd ProgressTaskControl
          sudo git pull
          git status


